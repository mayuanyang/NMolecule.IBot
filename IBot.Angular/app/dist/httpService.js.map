{"version":3,"names":[],"mappings":"","sources":["httpService.js"],"sourcesContent":["export default class httpService {\r\n\t\r\n\tconstructor($http, baseUrl) {\r\n\t    this.$http = $http;\r\n\t    this.baseTokenUrl = baseUrl;\r\n\t\tthis.baseUrl = baseUrl + '/api';\r\n\t}\r\n\r\n\tgetQuotationResult(items) {\r\n\t    return this.$http.post(this.baseUrl + '/generic/', items);\r\n\t}\r\n\t\r\n\tgetBindingInfo(qcId) {\r\n\t    return this.$http.get(this.baseUrl + '/QuoteCategoryBasicBindingInfo/'+ qcId);\r\n    }\r\n\t\r\n    getMenuItems(id) {\r\n        return this.$http.get(this.baseUrl + '/Menu/' + id);\r\n    }\r\n\r\n    registerAccount(info) {\r\n        return this.$http.post(this.baseUrl + '/account/Register', info);\r\n    }\r\n\t\t\r\n    requestAccessToken(loginInfo) {\r\n        // return this.$http.post(this.baseTokenUrl + '/Token', loginInfo,  {headers: { 'Content-Type': 'application/x-www-form-urlencoded' }});\r\n        return this.$http({\r\n            method: 'POST',\r\n            url: this.baseTokenUrl + '/Token',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            transformRequest: function(obj) {\r\n                var str = [];\r\n                for (var p in obj)\r\n                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n                return str.join(\"&\");\r\n            },\r\n            data: loginInfo\r\n        });\r\n    }\r\n\r\n}\r\n\r\nhttpService.$inject = ['$http', 'baseUrl'];\r\n\r\n"],"file":"httpService.js","sourceRoot":"/source/"}