{"version":3,"names":[],"mappings":"","sources":["httpService.js"],"sourcesContent":["export default class httpService {\r\n\t\r\n\tconstructor($http, baseUrl) {\r\n\t    this.$http = $http;\r\n\t    this.baseTokenUrl = baseUrl;\r\n\t\tthis.baseUrl = baseUrl + '/api';\r\n\t}\r\n\r\n\tgetQuotationResult(items) {\r\n\t    return this.$http.post(this.baseUrl + '/generic/', items);\r\n\t}\r\n\t\r\n\tgetBindingInfo(qcId) {\r\n\t    return this.$http.get(this.baseUrl + '/QuoteCategoryBasicBindingInfo/'+ qcId);\r\n    }\r\n\t\r\n    getMenuItems(id) {\r\n        return this.$http.get(this.baseUrl + '/Menu/' + id);\r\n    }\r\n\r\n    registerAccount(info) {\r\n        return this.$http.post(this.baseUrl + '/account/Register', info);\r\n    }\r\n\t\t\r\n    requestAccessToken(loginInfo) {\r\n        // return this.$http.post(this.baseTokenUrl + '/Token', loginInfo,  {headers: { 'Content-Type': 'application/x-www-form-urlencoded' }});\r\n        return this.$http({\r\n            method: 'POST',\r\n            url: this.baseTokenUrl + '/Token',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            transformRequest: function(obj) {\r\n                var str = [];\r\n                for (var p in obj)\r\n                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n                return str.join(\"&\");\r\n            },\r\n            data: loginInfo\r\n        });\r\n    }\r\n\r\n    getUserInfo() {\r\n        return this.$http.get(this.baseUrl + \"/Account/UserInfo\");\r\n        \r\n    }\r\n\r\n    getAllQuoteCategories(companyId) {\r\n        return this.$http.get(this.baseUrl + '/QuoteCategory/'+ companyId);\r\n    }\r\n\r\n    getAllParts(qcid) {\r\n        return this.$http.get(this.baseUrl + '/QuotePart/'+ qcid);\r\n    }\r\n\r\n    turnOnOffQuoteCategory(message) {\r\n        return this.$http.post(this.baseUrl + '/QuoteCategory/TurnOnOff', message);\r\n        \r\n    }\r\n\r\n    getQuoteMachineries(quoteCategoryId) {\r\n        return this.$http.get(this.baseUrl + '/QuoteMachinery/'+ quoteCategoryId);\r\n    }\r\n\r\n    turnOnOffQuoteMachinery(message) {\r\n        return this.$http.post(this.baseUrl + '/QuoteMachinery/', message);\r\n    }\r\n\r\n    saveMachines(message) {\r\n        return this.$http.post(this.baseUrl + '/QuoteMachinery/Save', message);\r\n    }\r\n\r\n    getQuoteMaterials(quoteCategoryId) {\r\n        return this.$http.get(this.baseUrl + '/QuoteMaterial/'+ quoteCategoryId);\r\n    }\r\n\r\n    saveMaterials(message) {\r\n        return this.$http.post(this.baseUrl + '/QuoteMaterial/Save', message);\r\n    }\r\n\r\n    getQuoteTechnicses(quoteCategoryGuid) {\r\n        return this.$http.get(this.baseUrl + '/QuoteTechnics/'+ quoteCategoryGuid);\r\n    }\r\n\r\n    saveTechnicses(message) {\r\n        return this.$http.post(this.baseUrl + '/QuoteTechnics/Save', message);\r\n    }\r\n\r\n    getProfits(quoteCategoryId) {\r\n        return this.$http.get(this.baseUrl + '/QuoteProfit/'+ quoteCategoryId);\r\n    }\r\n\r\n    saveProfits(message) {\r\n        return this.$http.post(this.baseUrl + '/QuoteProfit/Save', message);\r\n    }\r\n\r\n    openShop(message) {\r\n        return this.$http.post(this.baseUrl + '/Admin/OpenShop', message);\r\n    }\r\n\r\n    saveQuoteCategory(message) {\r\n        return this.$http.post(this.baseUrl + '/QuoteCategory/SaveQuoteCategory', message);\r\n    }\r\n\r\n    saveParts(message) {\r\n        return this.$http.post(this.baseUrl + '/QuotePart/Save', message);\r\n    }\r\n\r\n    getCompanyInfo(companyGuid) {\r\n        return this.$http.get(this.baseUrl + '/Company/GetBasicCompanyInfo/'+ companyGuid);\r\n    }\r\n    saveCompanyInfo(message) {\r\n        return this.$http.post(this.baseUrl + '/Admin/UpdateContactInfo', message);\r\n    }\r\n\r\n    getTimePerformanceStat(companyGuid) {\r\n        return this.$http.get(this.baseUrl + '/Admin/GetTimePerformanceStat/'+ companyGuid);\r\n    }\r\n\r\n    getCategoryPerformanceStat(companyGuid, type) {\r\n        return this.$http.get(this.baseUrl + '/Admin/GetCategoryPerformanceStat/'+ companyGuid + '/' + type);\r\n    }\r\n\r\n    getNews(companyGuid) {\r\n        return this.$http.get(this.baseUrl + '/Company/GetCompanyNews/'+ companyGuid );\r\n    }\r\n\r\n    addNews(message) {\r\n        return this.$http.post(this.baseUrl + '/Admin/AddCompanyNews', message);\r\n    }\r\n\r\n}\r\n\r\nhttpService.$inject = ['$http', 'baseUrl'];\r\n\r\n"],"file":"httpService.js","sourceRoot":"/source/"}