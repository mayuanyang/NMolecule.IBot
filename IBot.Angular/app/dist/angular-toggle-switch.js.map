{"version":3,"names":[],"mappings":"","sources":["angular-toggle-switch.js"],"sourcesContent":["angular.module('toggle-switch', ['ng']).directive('toggleSwitch', ['$compile', function($compile) {\n\treturn {\n\t\trestrict: 'EA',\n\t\treplace: true,\n\t\trequire:'ngModel',\n\t\tscope: {\n\t\t\tisDisabled: '=',\n\t\t\tonLabel: '@',\n\t\t\toffLabel: '@',\n\t\t\tknobLabel: '@',\n\t\t\thtml: '=',\n\t\t\tonChange: '&'\n\t\t},\n\t\ttemplate:\n\t\t\t\t\t'<div class=\"ats-switch\" ng-click=\"toggle()\" ng-keypress=\"onKeyPress($event)\" ng-class=\"{ \\'disabled\\': isDisabled }\" role=\"switch\" aria-checked=\"{{!!model}}\">' +\n\t\t\t\t\t\t'<div class=\"switch-animate\" ng-class=\"{\\'switch-off\\': !model, \\'switch-on\\': model}\">' +\n\t\t\t\t\t\t\t'<span class=\"switch-left\"></span>' +\n\t\t\t\t\t\t\t'<span class=\"knob\"></span>' +\n\t\t\t\t\t\t\t'<span class=\"switch-right\"></span>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>',\n\t\tcompile: function(element, attrs) {\n\t\t\tif (angular.isUndefined(attrs.onLabel)) {\n\t\t\t\tattrs.onLabel = 'On';\n\t\t\t}\n\t\t\tif (angular.isUndefined(attrs.offLabel)) {\n\t\t\t\tattrs.offLabel = 'Off';\n\t\t\t}\n\t\t\tif (angular.isUndefined(attrs.knobLabel)) {\n\t\t\t\tattrs.knobLabel = '\\u00a0';\n\t\t\t}\n\t\t\tif (angular.isUndefined(attrs.isDisabled)) {\n\t\t\t\tattrs.isDisabled = false;\n\t\t\t}\n\t\t\tif (angular.isUndefined(attrs.html)) {\n\t\t\t\tattrs.html = false;\n\t\t\t}\n\t\t\tif (angular.isUndefined(attrs.tabindex)) {\n\t\t\t\tattrs.tabindex = 0;\n\t\t\t}\n\n\t\t\treturn function postLink(scope, iElement, iAttrs, ngModel) {\n\t\t\t\tiElement.attr('tabindex', attrs.tabindex);\n\n\t\t\t\tscope.toggle = function toggle() {\n\t\t\t\t\tif (!scope.isDisabled) {\n\t\t\t\t\t\tscope.model = !scope.model;\n\t\t\t\t\t\tngModel.$setViewValue(scope.model);\n\t\t\t\t\t}\n\t\t\t\t\tscope.onChange();\n\t\t\t\t};\n\n\t\t\t\tvar spaceCharCode = 32;\n\t\t\t\tscope.onKeyPress = function onKeyPress($event) {\n\t\t\t\t\tif ($event.charCode == spaceCharCode && !$event.altKey && !$event.ctrlKey && !$event.metaKey) {\n\t\t\t\t\t\tscope.toggle();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tngModel.$formatters.push(function(modelValue) {\n\t\t\t\t\treturn modelValue;\n\t\t\t\t});\n\n\t\t\t\tngModel.$parsers.push(function(viewValue) {\n\t\t\t\t\treturn viewValue;\n\t\t\t\t});\n\n\t\t\t\tngModel.$viewChangeListeners.push(function() {\n\t\t\t\t\tscope.$eval(attrs.ngChange);\n\t\t\t\t});\n\n\t\t\t\tngModel.$render = function() {\n\t\t\t\t\tscope.model = ngModel.$viewValue;\n\t\t\t\t};\n\n\t\t\t\tvar bindSpan = function(span, html) {\n\t\t\t\t\tspan = angular.element(span);\n\t\t\t\t\tvar bindAttributeName = (html === true) ? 'ng-bind-html' : 'ng-bind';\n\n\t\t\t\t\t// remove old ng-bind attributes\n\t\t\t\t\tspan.removeAttr('ng-bind-html');\n\t\t\t\t\tspan.removeAttr('ng-bind');\n\n\t\t\t\t\tif (angular.element(span).hasClass(\"switch-left\"))\n\t\t\t\t\t\tspan.attr(bindAttributeName, 'onLabel');\n\t\t\t\t\tif (span.hasClass(\"knob\"))\n\t\t\t\t\t\tspan.attr(bindAttributeName, 'knobLabel');\n\t\t\t\t\tif (span.hasClass(\"switch-right\"))\n\t\t\t\t\t\tspan.attr(bindAttributeName, 'offLabel');\n\n\t\t\t\t\t$compile(span)(scope, function(cloned, scope) {\n\t\t\t\t\t\tspan.replaceWith(cloned);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t// add ng-bind attribute to each span element.\n\t\t\t\t// NOTE: you need angular-sanitize to use ng-bind-html\n\t\t\t\tvar bindSwitch = function(iElement, html) {\n\t\t\t\t\tangular.forEach(iElement[0].children[0].children, function(span, index) {\n\t\t\t\t\t\tbindSpan(span, html);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tscope.$watch('html', function(newValue) {\n\t\t\t\t\tbindSwitch(iElement, newValue);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t};\n}]);\n"],"file":"angular-toggle-switch.js","sourceRoot":"/source/"}